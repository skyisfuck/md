apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kube-patch
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kube-patch
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kube-patch
subjects:
- kind: ServiceAccount
  name: kube-patch
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kube-patch
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kube-patch
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kube-patch
subjects:
- kind: ServiceAccount
  name: kube-patch
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kube-patch
  namespace: kube-system
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: kube-patch
  namespace: kube-system
spec:
  schedule: "* */8 * * *"
  startingDeadlineSeconds: 20
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      activeDeadlineSeconds: 10
      backoffLimit: 2
      template:
        spec:
          serviceAccountName: kube-patch
          tolerations:
          - effect: NoSchedule
            key: node-role.kubernetes.io/master
          restartPolicy: Never
          containers:
          - name: patch
            image: zhangguanzhang/kube-patch
